buildscript {
    ext.kotlin_version = "1.3.71"
    ext.kotlinxcli_version = "0.2.1"
    ext.h2_version = "1.4.200"
    ext.flyway_verion = "6.3.2"
    ext.log4j2_version = "2.13.1"
    ext.spek_version = "2.0.10"
    ext.ktlint_version = "9.2.1"
    ext.mockk_version = "1.9.3"
    ext.detekt_version = "1.7.4"
    ext.jacoco_version = "0.8.5"
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'jacoco'
}

group 'com.petrsed.aaa-app'
version '1.0'
configurations {
    detekt
    ktlint
}
repositories {
    mavenCentral()
    maven { url "https://kotlin.bintray.com/kotlinx" }
    jcenter()
}

dependencies {
    implementation("com.h2database:h2:$h2_version")
    implementation("org.flywaydb:flyway-core:$flyway_verion")
    implementation("org.apache.logging.log4j:log4j-api:$log4j2_version")
    implementation("org.apache.logging.log4j:log4j-core:$log4j2_version")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")

    testImplementation("org.spekframework.spek2:spek-dsl-jvm:$spek_version")
    testRuntimeOnly("org.spekframework.spek2:spek-runner-junit5:$spek_version")
    testImplementation("org.jetbrains.kotlin:kotlin-test")
    testImplementation("io.mockk:mockk:$mockk_version")
    ktlint "com.github.shyiko:ktlint:0.23.1"
    detekt 'io.gitlab.arturbosch.detekt:detekt-cli:1.8.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
kotlin {
    dependencies {
        implementation("org.jetbrains.kotlinx:kotlinx-cli:$kotlinxcli_version")
    }
}
jar {
    manifest {
        attributes("Main-Class": "ru.kafedrase.authapp.MainKt")
    }
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

test {
    useJUnitPlatform {
        includeEngines("spek2")
    }
}
task detekt(type: JavaExec) {
    main = "io.gitlab.arturbosch.detekt.cli.Main"
    classpath = configurations.detekt
    def input = "$projectDir"
    def config = "$projectDir/detekt.yml"
    def exclude = ".*/build/.*,.*/resources/.*"
    def params = [ '-i', input, '-c', config, '-ex', exclude]
    args(params)
}

jacoco {
    toolVersion = "$jacoco_version"
    reportsDir = file("$buildDir/reports/jacoco")
}

tasks.jacocoTestReport {
    reports {
        html {
            enabled = true
        }
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}
